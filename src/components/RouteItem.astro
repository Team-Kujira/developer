---
import type { Route } from "../navigation";

export type Props = { route: Route; depth: number; selected?: string };

const { route, depth, selected } = Astro.props;
let isSelected = (selected || "") === route.name;
---

<div class="route-item">
  <div
    class:list={[
      "grid",
      route.path
        ? "hover:bg-kujira-black font-medium"
        : "font-semibold text-kujira-gray",
    ]}
  >
    <div
      class="flex items-center h-8 pr-6 col-start-1 col-end-1 row-start-1 row-end-1 overflow-hidden"
    >
      <div
        style={`width: ${0.75 * depth + 1.5}rem;`}
        class="h-8 flex items-center justify-center"
      >
        {
          route.subRoutes && (
            <div class="h-3 z-20">
              <img
                src="/chevron.svg"
                class:list={[
                  "h-full chevron",
                  route.defaultExpanded ? "rotate-90" : "rotate-0",
                ]}
              />
            </div>
          )
        }
      </div>
      <div
        class="flex-1 min-w-0 text-ellipsis whitespace-nowrap overflow-hidden"
      >
        <span>{route.name}</span>
      </div>
    </div>
    {route.path && (<a
      href={route.path}
      class="w-full h-full col-start-1 col-end-1 row-start-1 row-end-1 opacity-0 z-10"
    />)}
  </div>
  <div class={route.defaultExpanded ? "subroutes block" : "subroutes hidden"}>
    {
      route.subRoutes?.map((subRoute) => (
        <Astro.self route={subRoute} selected={selected} depth={depth + 1} />
      ))
    }
  </div>
</div>

<script>
  const chevrons = document.querySelectorAll("img.chevron");
  chevrons.forEach((chevron) => {
    chevron.addEventListener("click", (e) => {
      e.preventDefault();
      e.stopPropagation();
      chevron.classList.toggle("rotate-90");
      chevron.classList.toggle("rotate-0");
      const subs = chevron.closest(".route-item")?.querySelector(".subroutes");
      subs?.classList.toggle("block");
      subs?.classList.toggle("hidden");
    });
  });
</script>
